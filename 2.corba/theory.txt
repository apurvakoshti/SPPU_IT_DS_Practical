Aim: To develop any distributed application with the CORBA program using the Java IDL
Tools: Java Programming Environment and JDK 1.8
CORBA- common object request broker architecture. 
Theory: CORBA is a standard defined by the OMG (Object Management Group) that enables communication between objects written in different programming langauges and running on different machines in a network.
CORBA is based on the client-server architecture where the client sends the request and the server responds to it.

-The OMG Reference Model architecture of CORBA given below:
Application Interfaces         Domain Interfaces    Common Facilities     

Object Request Broker

Object Services

-The main components of the CORBA
1. ORB (Object Request Broker)
Core of CORBA.
Acts as a middleware that handles communication between client and server objects.
2. Interface Definition Language- used to define the interfaces (methods and attributes) for corba objects.
3.Stub
-The stub is location on the client-side.
-It acts as proxy.
-The stub handles the marshalling of the method calls and arguments.
-It sends the request using the object request broker.
-It then recieves and unmarshall the response from the server.
4.Skeleton
-The skeleton is located on the server-side.
-It acts as dispatcher.
-It unmarshalls the request from the client, invoke the actual method and then marshall the response back to the client.


-Both the stub and skeleton are auto-generated from the idl file using the corba idl compiler.

-Marshalling is the process of converting an object;s data into byte stream or transmittable format.
-Unmarshalling is the reverse process of marshalling, it converts the byte stream back into original object data.