Aim: Implement a multithreaded client/server process communication using the RMI.
Tools: Java Programming Environment, JDK and RMI Registry.

Theory: 

A distributed system is a group of computers that work together to appear as a single system to the user.
Example: Google Search runs on many servers across the world, but to you, it looks like one simple website.


-RMI stands for Remote Method Invocation and it acts as an API in short.
-RMI is a Java technology that allows one java program (client) to call methods on an object in another java program (server), even if they are on different computers.
-RMI helps in building the distributed application.
-For example, customer service center.
 Many customers (client) call the same center (server). Each customer is handled by the different agent (thread), so all call happen together.

-Multithreading is the process of executing multiple thread(lightweight process) concurrently within a program to improve the performance.
-Multithreading can be implemented by the Thread class or by the Runnable Interface in Java.

-The RMI Registry is the server-side service that allow the client to look up and access the remote objects by name.

// in intellij, make rmi as folder and in src the folder, add all the files by deleting the main file.
//for running these commands. go to cd src and then run
// rmiregistry -version
//step 1 : javac *.java
//step 2: start rmiregistry
// step 3: java Server
// step 4: java Client

Do the following in Command Prompt:
set JAVA_HOME=C:\Program Files\Java\jdk-20
set PATH=%JAVA_HOME%\bin;%PATH%

Or in PowerShell:
$env:JAVA_HOME="C:\Program Files\Java\jdk-20"
$env:Path="$env:JAVA_HOME\bin;$env:Path"